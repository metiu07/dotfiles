# sway config file (v4)

# Set the default modifier key
# Bindings are setup with keycodes, you can get the codes by running `xev -event keyboard` (search for keycode)
set $mod Mod4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 2

# Resize or drag windows with mouse
tiling_drag enable

# Font for window titles. Will also be used by the bar unless a different font
# Is used in the bar {} block below.
# font xft:URWGothic-Book 11
font pango:DejaVu Sans Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Start a new terminal with clean tmux session
# NOTE: Fish is here to set the TERM variable before tmux so TrueColors works
bindsym $mod+Return exec alacritty -e fish -c tmux -f $HOME/.config/tmux/tmux.conf new
bindsym $mod+Shift+Return exec alacritty -e fish -c tmux -f $HOME/.config/tmux/tmux.conf a
bindsym $mod+Alt+Return exec alacritty

# Kill focused window
bindcode $mod+24 kill

# Dump the window tree into a temporary file, this is useful for setting the
# floating/focus rules on windows that disappear fast
# mod + F9
bindcode $mod+75 exec swaymsg -t get_tree > /tmp/sway_tree$(date +%s).json && notify-send "Window tree dumped"

# Start program launcher
# Putting commas in sway config can cause issues! Either create script to run
# program or replace commas with '#'
# bindsym $mod+d exec rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Noto Sans 8'
# bindcode $mod+40 exec rofi -combi-modi drun#ssh#run -show combi
bindcode $mod+65 exec wofi --show drun -I -a
# bindcode $mod+65 exec albert show

# Calculator
bindcode $mod+54 exec qalculate-gtk

# Ranger as file manager
bindsym $mod+o exec kitty fish -c "TERM=kitty ranger-open"

# Ranger as wallpaper setter
bindcode $mod+25 exec kitty fish -c "TERM=kitty ranger-wallpaper"
bindcode $mod+Shift+25 exec kitty fish -c "TERM=kitty ranger-wal"
bindcode $mod+Alt+25 exec fish -c "wallpaper"

# Wal themes
bindcode $mod+Shift+28 exec fish -c "wal-theme"

# Translator
bindcode $mod+33 exec fish -c "trans_sk"

# Dictionary
bindcode $mod+Shift+33 exec fish -c "trans_en"

# Screenshots
bindsym Print exec grimshot --notify copy window -
bindsym $mod+Print exec wl-paste | swappy -f -
bindsym Shift+Print exec grimshot --notify copy active -

# Focus urgent window
bindcode $mod+53 [urgent=latest] focus

# Change focus
bindcode $mod+43 focus left
bindcode $mod+44 focus down
bindcode $mod+45 focus up
bindcode $mod+46 focus right

# Move the focused window
bindcode $mod+Shift+43 move left
bindcode $mod+Shift+44 move down
bindcode $mod+Shift+45 move up
bindcode $mod+Shift+46 move right

# Split in horizontal orientation
bindcode $mod+57 split h

# Split in vertical orientation
bindcode $mod+55 split v

# Fullscreen mode
bindcode $mod+41 fullscreen

# Change container layout (stacked, tabbed, toggle split)
bindcode $mod+39 layout stacking
bindcode $mod+28 layout tabbed
bindcode $mod+26 layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Focus the parent container
bindsym $mod+a focus parent

# Focus the child container
bindsym $mod+Shift+a focus child

# Alt-tab behaviour
bindsym $mod+Tab workspace back_and_forth

# Switch to workspace
bindcode $mod+10 workspace 1
bindcode $mod+11 workspace 2
bindcode $mod+12 workspace 3
bindcode $mod+13 workspace 4
bindcode $mod+14 workspace 5
bindcode $mod+15 workspace 6
bindcode $mod+16 workspace 7
bindcode $mod+17 workspace 8
bindcode $mod+18 workspace 9

# Move focused container to workspace
bindcode $mod+Shift+10 move container to workspace 1
bindcode $mod+Shift+11 move container to workspace 2
bindcode $mod+Shift+12 move container to workspace 3
bindcode $mod+Shift+13 move container to workspace 4
bindcode $mod+Shift+14 move container to workspace 5
bindcode $mod+Shift+15 move container to workspace 6
bindcode $mod+Shift+16 move container to workspace 7
bindcode $mod+Shift+17 move container to workspace 8
bindcode $mod+Shift+18 move container to workspace 9

# Move workspaces
bindcode $mod+Control+43 move workspace to output left
bindcode $mod+Control+44 move workspace to output down
bindcode $mod+Control+45 move workspace to output up
bindcode $mod+Control+46 move workspace to output right

# Reload the configuration file
bindcode $mod+Shift+54 reload

# Resize window mode
mode "resize" {
        bindcode 44 resize shrink width 25 px or 25 ppt
        bindcode 45 resize grow height 25 px or 25 ppt
        bindcode 46 resize shrink height 25 px or 25 ppt
        bindcode 47 resize grow width 25 px or 25 ppt
        bindcode Shift+44 resize shrink width 50 px or 50 ppt
        bindcode Shift+45 resize grow height 50 px or 50 ppt
        bindcode Shift+46 resize shrink height 50 px or 50 ppt
        bindcode Shift+47 resize grow width 50 px or 50 ppt
        bindsym Alt+h resize shrink width 2 px or 2 ppt
        bindsym Alt+j resize grow height 2 px or 2 ppt
        bindsym Alt+k resize shrink height 2 px or 2 ppt
        bindsym Alt+l resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape or q
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
}

bindcode $mod+27 mode "resize"

# Set shut down, restart and locking features
set $mode_system (l)ock, (e)xit/logout, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec swaylock, mode "default"
    bindsym s exec systemctl suspend, mode "default"
    bindsym e exec killall sway, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindcode $mod+19 mode "$mode_system"

# Pulse Audio controls
# NOTE: Keycode definitions can be found on https://cgit.freedesktop.org/xorg/proto/x11proto/tree/XF86keysym.h
bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ +2%; notify-send 'volume up' -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | grep '[0-9]*%' -o | head -n1 | cut --complement -c 3)"
bindsym XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ -2%; notify-send 'volume down' -h int:value:$(pactl get-sink-volume @DEFAULT_SINK@ | grep '[0-9]*%' -o | head -n1 | cut --complement -c 3)"
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle 

# Screen brightness controls
# NOTE: User must be in video group (sudo usermod -a -G video <USER>)
# bindsym XF86MonBrightnessUp exec "light -A 5; notify-send 'brightness up' -h int:value:$(light -G)"
# bindsym XF86MonBrightnessDown exec "light -U 5; notify-send 'brightness down' -h int:value:$(light -G)"
bindsym XF86MonBrightnessUp exec "brightnessctl set +2%; notify-send 'brightness up' -h int:value:$(( ($(brightnessctl get) * 100) / $(brightnessctl max) ))"
bindsym XF86MonBrightnessDown exec "brightnessctl set 2%-; notify-send 'brightness down' -h int:value:$(( ($(brightnessctl get) * 100) / $(brightnessctl max) ))"

# Toggle split direction for each window
default_orientation vertical
for_window [title="^"] split toggle

# Prevent the sleep/lock for certain applications
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [title="Zoom Meeting"] inhibit_idle fullscreen

# Open specific applications in floating mode
for_window [app_id="nm-openconnect-auth-dialog"] floating enable
for_window [app_id="qalculate-gtk"] focus, floating enable, resize set 700 250
for_window [app_id="zoom"] floating enable
for_window [app_id="thunar"] floating enable, resize set 900 500, move position center, focus
for_window [app_id="imv"] floating enable, move position center, focus
for_window [app_id="blueman-manager"] floating enable
for_window [title="Firefox - Sharing Indicator"] floating enable
for_window [title="^Albert$"] floating enable, resize set 800 400, move position center, focus
for_window [instance="sun-awt-X11-XWindowPeer" title="win.*"] floating enable, focus
for_window [title="Trans - .*"] focus, floating enable, resize set 700 900
# Firefox Teams notifications, turns out they have empty title
for_window [title="^$" app_id="firefox"] floating enable

# Assign the programs to workspaces
assign [class="Brave-browser"] 2
assign [class="Slack"] 3
assign [class="discord"] 3
assign [class="Steam"] 5
assign [class="csgo_linux64"] 5
assign [app_id="com.cisco.anyconnect.gui"] 8
assign [app_id="ZSTray"] 8

# ==================== Autostart ====================

# Fix long startup of GTK apps and enable screensharing
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

# Terminal
exec alacritty -e fish -c tmux -f $HOME/.config/tmux/tmux.conf new

# Startup display configuration manager
exec_always "pkill kanshi; sleep 1s; kanshi"

# Manage what to do when the laptop lid closes
bindswitch --reload lid:on systemctl suspend
# bindswitch --reload lid:off output eDP-1 enable

# Setup wallpaper
# Pick a random wallpaper from ~/Pictures/Wallpapers
exec fish -c wallpaper

# Startup the polkit authenticator agent
exec_always "lxqt-policykit-agent || /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"

# Startup clipboard manager
exec_always "pkill copyq; sleep 1s; copyq"

# Startup automatic blue light filter
exec_always "pkill gammastep; sleep 1s; gammastep -l 48.1:17.1 -t 6500:4100 -m wayland"

# Startup notification daemon
exec_always "pkill xfce4-notifyd; pkill mako; sleep 1s; mako"
# exec_always "pkill dunst; sleep 1s; dunst"

# Launch the status bar
exec_always "pkill waybar; sleep 1s; waybar"

# Startup the network manager
exec_always "pkill nm-applet; sleep 1s; nm-applet --indicator"

# Startup the bluetooth manager
exec_always "pkill blueman-applet; sleep 1s; blueman-applet"

# Startup automatic screen locking when idle
exec_always "pkill swayidle; sleep 5; swayidle"

# Autostart ~/.config/sway/local.sh if it exists
exec [ -x $HOME/.config/sway/local.sh ] && $HOME/.config/sway/local.sh

# Set keyboard layouts
input type:keyboard {
        xkb_layout "us,sk"
        xkb_variant "colemak_dh,qwerty"
        # Switch keyboard layouts by pressing both Ctrls keys
        xkb_options "caps:escape,altwin:swap_lalt_lwin,grp:ctrls_toggle"
        repeat_rate 80
}

input type:touchpad {
      click_method clickfinger
      dwt enabled
      tap enabled
      middle_emulation enabled
      drag disabled
}

# Set inner/outer gaps
gaps inner 5
gaps outer 0

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying
# outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or
# 0 (remove gaps for current workspace). If you also press Shift with these
# keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o)uter, (i)nner, (r)eset, (q)uit, (0)off
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global), (r)eset, (q)uit
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global), (r)eset, (q)uit
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym r      gaps inner all set 14; gaps outer all set -2
        bindsym 0      gaps inner all set 0; gaps outer all set 0
        bindsym q      mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0
        bindsym r     gaps inner current set 14

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0
        bindsym Shift+r     gaps inner all set 14

        bindsym q mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0
        bindsym r     gaps outer current set -2

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0
        bindsym Shift+r     gaps outer all set -2

        bindsym q mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

include ~/.config/sway/config.gruvbox
